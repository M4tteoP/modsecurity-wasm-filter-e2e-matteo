name: test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:

jobs:
  build-wasm-module:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: "Retriving modsecurity-wasm-filter hash"
        # Cache's key based on the modesecurity-wasm-filter repo, it should lead to
        # rebuild the wasm module only if there are updates on that repo.
        run: echo "CACHE_MODSEC_WASM_FILTER_HASH=${{ hashFiles('modsecurity-wasm-filter/**') }}" >> $GITHUB_ENV

      - name: "Attempts to restore cache"
        id: cache-wasm-bin
        uses: actions/cache@v3
        with:
          path: |
            build/
          key: wasm-module-build-${{ env.CACHE_MODSEC_WASM_FILTER_HASH }}

      - name: "Build wasm module"
        if: steps.cache-wasm-bin.outputs.cache-hit != 'true'
        shell: bash
        run: make build-wasm-plugin extract-wasm-plugin

      - name: "Cache generated .wasm file"
        if: steps.cache-wasm-bin.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            build/
          key: wasm-module-build-${{ env.CACHE_MODSEC_WASM_FILTER_HASH }}

  e2e-local-tests:
    runs-on: ubuntu-latest
    needs: build-wasm-module
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: "Install func-e"
        shell: bash
        run: curl https://func-e.io/install.sh | bash -s -- -b /usr/local/bin

      - name: "Restore the wasm files cache"
        uses: actions/cache@v3
        with:
          path: |
            build/
          key: wasm-module-build-${{ hashFiles('modsecurity-wasm-filter/**') }}

      - name: "Spin up local server and envoy"
        shell: bash
        run: |
          docker run --rm -d -p 8000:10080 jcchavezs/httpmole -response-status=200 &
          func-e run -c envoy-config.yaml --log-level info --component-log-level wasm:debug &

      - name: "Run local tests"
        shell: bash
        run: |
          ./tests.sh

  e2e-istio-tests:
    runs-on: ubuntu-latest
    needs: build-wasm-module
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: "Restore the wasm files cache"
        uses: actions/cache@v3
        with:
          path: |
            bin/
          key: wasm-module-build-${{ hashFiles('modsecurity-wasm-filter/**') }}
      
      - name: Install Kind
        shell: bash
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.12.0/kind-linux-amd64
          sudo mv ./kind /usr/bin/kind 
      
      - name: Install istioctl
        shell: bash
        run: |
          curl -sL https://istio.io/downloadIstioctl | sh -

      - name: Create Kind cluster
        run: |
          kind create cluster --config=./kind-istio/kind-config.yaml
          kubectl scale deployment --replicas 1 coredns --namespace kube-system

      - name: Install Istio
        run: |   
          yes | $HOME/.istioctl/bin/istioctl install --set profile=default
          kubectl label namespace default istio-injection=enabled --overwrite

      - name: Run some sanity checks
        # kubectl is already installed on the Github Ubuntu worker
        run: |
          kubectl get nodes -o wide
          kubectl get pods --all-namespaces -o wide
          kubectl get services --all-namespaces -o wide



