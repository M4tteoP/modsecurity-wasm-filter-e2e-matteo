name: test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: "Cache generated .wasm file"
        uses: actions/cache@v3
        with:
          path: |
            build/
          key: wasm-module-build-${{ github.sha }}

      - name: "Build wasm module"
        shell: bash
        run: make build-wasm-plugin extract-wasm-plugin

  e2e-local-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Install func-e"
        shell: bash
        run: curl https://func-e.io/install.sh | bash -s -- -b /usr/local/bin

      - name: "Restore the wasm files cache"
        uses: actions/cache@v3
        with:
          path: |
            build/
          key: wasm-module-build-${{ github.sha }}

      - name: "Spin up local server and envoy"
        shell: bash
        run: |
          func-e run -c envoy-config.yaml --log-level info --component-log-level wasm:debug &

      - name: "Run local tests"
        shell: bash
        run: |
          ./tests.sh

  publish:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: e2e-test
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Push WASM plugin"
        shell: bash
        run: make push-wasm-plugin
  e2e-istio-tests:
    runs-on: ubuntu-latest
    needs: build-wasm-module
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: "Restore the wasm files cache"
        uses: actions/cache@v3
        with:
          path: |
            bin/
          key: wasm-module-build-${{ hashFiles('modsecurity-wasm-filter/**') }}
      
      - name: Install Kind
        shell: bash
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.12.0/kind-linux-amd64
          sudo mv ./kind /usr/bin/kind 
      
      - name: Install istioctl
        shell: bash
        run: |
          curl -sL https://istio.io/downloadIstioctl | sh -

      - name: Create Kind cluster
      # kubectl is already installed on the Github Ubuntu worker
        run: |
          kind create cluster --config=./kind-istio/kind-config.yaml
          kubectl scale deployment --replicas 1 coredns --namespace kube-system

      - name: Install Istio
        run: |   
          yes | $HOME/.istioctl/bin/istioctl install --set profile=default
          kubectl label namespace default istio-injection=enabled --overwrite

      - name: Install metallb
        run: |   
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
          kubectl apply -f ./kind-istio/metallb-configmap.yaml

      - name: Deploy nginx and Gateway
        run: |   
          kubectl apply -f ./kind-istio/workload/deploy-nginx.yaml
          kubectl apply -f ./kind-istio/workload/istio-gateway.yaml

      - name: Run sanity checks
        run: |
          sleep 20
          echo "post sleep"
          kubectl get pods -o wide
          curl -v "http://172.18.0.100/nginx"
          kubectl get svc -o wide -n istio-system
          curl -v "http://172.18.0.100/admin"

      - name: Deploy WASM-WAF
      # keep the GHCR owner a variable. The name must be lowercase.
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          export GITHUB_REPOSITORY_OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "GLOBAL_OWNER_LC=$GITHUB_REPOSITORY_OWNER_LC" >> $GITHUB_ENV
          sed -i "s/{{GITHUB_REPOSITORY_OWNER}}/$GITHUB_REPOSITORY_OWNER_LC/" kind-istio/workload/deploy-waf.yaml  
          kubectl apply -f kind-istio/workload/deploy-waf.yaml

      - name: Run WAF sanity checks
        run: |
          sleep 20
          echo "post WAF sleep"
          kubectl get pods -o wide
          kubectl logs deployment/nginx-v1 -c istio-proxy
          curl -v "http://172.18.0.100/nginx"
          kubectl get svc -o wide -n istio-system
          curl -v "http://172.18.0.100/admin"